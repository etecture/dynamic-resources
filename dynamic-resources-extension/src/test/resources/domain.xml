<domain log-root="${com.sun.aas.instanceRoot}/logs" application-root="${com.sun.aas.instanceRoot}/applications" version="10.0">
    <system-applications/>
    <applications/>
    <resources>
        <jdbc-resource pool-name="__TimerPool" jndi-name="jdbc/__TimerPool" object-type="system-admin"/>
        <jdbc-connection-pool name="__TimerPool" datasource-classname="org.apache.derby.jdbc.EmbeddedXADataSource" res-type="javax.sql.XADataSource">
            <property value="${com.sun.aas.instanceRoot}/lib/databases/ejbtimer" name="databaseName"/>
            <property value=";create=true" name="connectionAttributes"/>
        </jdbc-connection-pool>
    </resources>
    <servers>
        <server name="server" config-ref="server-config">
            <resource-ref ref="jdbc/__TimerPool"/>
        </server>
    </servers>
    <configs>
        <config name="server-config">
            <http-service>
                <access-log/>
                <virtual-server id="server" network-listeners="http-listener-1, http-listener-2" >
                    <property name="default-web-xml" value="${com.sun.aas.instanceRoot}/config/default-web.xml"/>
                </virtual-server>
                <virtual-server id="__asadmin" network-listeners="admin-listener" />
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1" />
                <iiop-listener port="${IIOP_LISTENER_PORT}" id="orb-listener-1" address="0.0.0.0" />
                <iiop-listener port="${IIOP_SSL_LISTENER_PORT}" id="SSL" address="0.0.0.0" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
                </iiop-listener>
                <iiop-listener port="${IIOP_SSL_MUTUALAUTH_PORT}" id="SSL_MUTUALAUTH" address="0.0.0.0" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true" />
                </iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system" type="server">
                <!-- JSR 160  "system-jmx-connector" -->
                <jmx-connector address="0.0.0.0" auth-realm-name="admin-realm" name="system" port="${JMX_SYSTEM_CONNECTOR_PORT}" protocol="rmi_jrmp" security-enabled="false"/>
                <!-- JSR 160  "system-jmx-connector" -->
                <property value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war" name="adminConsoleDownloadLocation" />
            </admin-service>
            <web-container>
                <session-config>
                    <session-manager>
                        <manager-properties/>
                        <store-properties />
                    </session-manager>
                    <session-properties />
                </session-config>
            </web-container>
            <ejb-container session-store="${com.sun.aas.instanceRoot}/session-store">
                <ejb-timer-service />
            </ejb-container>
            <mdb-container />
            <jms-service type="EMBEDDED" default-jms-host="default_JMS_host" addresslist-behavior="priority">
                <jms-host name="default_JMS_host" host="localhost" port="${JMS_PROVIDER_PORT}" admin-user-name="admin" admin-password="admin" lazy-init="true"/>
            </jms-service>
            <log-service log-rotation-limit-in-bytes="2000000" file="${com.sun.aas.instanceRoot}/logs/server.log">
                <module-log-levels />
            </log-service>
            <security-service>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile" />
                    <property name="jaas-context" value="fileRealm" />
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile" />
                    <property name="jaas-context" value="fileRealm" />
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate" />
                <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
                    <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy" />
                </jacc-provider>
                <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" />
                <audit-module classname="com.sun.enterprise.security.Audit" name="default">
                    <property name="auditOn" value="false" />
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property name="encryption.key.alias" value="s1as" />
                        <property name="signature.key.alias" value="s1as" />
                        <property name="dynamic.username.password" value="false" />
                        <property name="debug" value="false" />
                    </provider-config>
                    <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property name="encryption.key.alias" value="s1as" />
                        <property name="signature.key.alias" value="s1as" />
                        <property name="dynamic.username.password" value="false" />
                        <property name="debug" value="false" />
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
                    </provider-config>
                    <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property name="encryption.key.alias" value="s1as" />
                        <property name="signature.key.alias" value="s1as" />
                        <property name="debug" value="false" />
                    </provider-config>
                    <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property name="encryption.key.alias" value="s1as" />
                        <property name="signature.key.alias" value="s1as" />
                        <property name="debug" value="false" />
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" />
                    </provider-config>
                </message-security-config>
            </security-service>
            <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs" automatic-recovery="true" />
            <diagnostic-service />
            <java-config debug-options="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${JAVA_DEBUGGER_PORT}" system-classpath="" classpath-suffix="">
                <jvm-options>-XX:MaxPermSize=192m</jvm-options>
                <jvm-options>-XX:PermSize=64m</jvm-options>
                <jvm-options>-server</jvm-options>
                <jvm-options>-Djava.awt.headless=true</jvm-options>
                <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
                <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
                <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
                <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
                <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
                <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
                <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
                <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
                <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
                <jvm-options>-XX:NewRatio=2</jvm-options>
                <jvm-options>-Xmx512m</jvm-options>
                <!-- Port on which remote shell listens for connections.-->
                <jvm-options>-Dosgi.shell.telnet.port=${OSGI_SHELL_TELNET_PORT}</jvm-options>
                <!-- How many concurrent users can connect to this remote shell -->
                <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
                <!-- From which hosts users can connect -->
                <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
                <!-- Gogo shell configuration -->
                <jvm-options>-Dgosh.args=--noshutdown -c noop=true</jvm-options>
                <!-- Directory being watched by fileinstall. -->
                <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
                <!-- Time period fileinstaller thread in ms. -->
                <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
                <!-- log level: 1 for error, 2 for warning, 3 for info and 4 for debug. -->
                <jvm-options>-Dfelix.fileinstall.log.level=3</jvm-options>
                <!-- should new bundles be started or installed only?
                    true => start, false => only install
                -->
                <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
                <!-- should watched bundles be started transiently or persistently -->
                <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
                <!-- Should changes to configuration be saved in corresponding cfg file? false: no, true: yes
                     If we don't set false, everytime server starts from clean osgi cache, the file gets rewritten.
                -->
                <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
                <!-- End of OSGi bundle configurations -->
            </java-config>
            <availability-service>
                <web-container-availability/>
                <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"/>
                <jms-availability/>
            </availability-service>
            <network-config>
                <protocols>
                    <protocol name="http-listener-1">
                        <http default-virtual-server="server">
                            <file-cache />
                        </http>
                    </protocol>
                    <protocol security-enabled="true" name="http-listener-2">
                        <http default-virtual-server="server">
                            <file-cache />
                        </http>
                        <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
                    </protocol>
                    <protocol name="admin-listener">
                        <http default-virtual-server="__asadmin" max-connections="250">
                            <file-cache enabled="false" />
                        </http>
                    </protocol>
                    <protocol security-enabled="true" name="sec-admin-listener">
                        <http default-virtual-server="__asadmin" encoded-slash-enabled="true">
                            <file-cache></file-cache>
                        </http>
                        <ssl client-auth="want" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="glassfish-instance"></ssl>
                    </protocol>
                    <protocol name="admin-http-redirect">
                        <http-redirect secure="true"></http-redirect>
                    </protocol>
                    <protocol name="pu-protocol">
                        <port-unification>
                            <protocol-finder protocol="sec-admin-listener" name="http-finder" classname="com.sun.grizzly.config.HttpProtocolFinder"></protocol-finder>
                            <protocol-finder protocol="admin-http-redirect" name="admin-http-redirect" classname="com.sun.grizzly.config.HttpProtocolFinder"></protocol-finder>
                        </port-unification>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener address="0.0.0.0" port="${HTTP_LISTENER_PORT}" protocol="http-listener-1" transport="tcp" name="http-listener-1" thread-pool="http-thread-pool" />
                    <network-listener address="0.0.0.0" port="${HTTP_SSL_LISTENER_PORT}" protocol="http-listener-2" transport="tcp" name="http-listener-2" thread-pool="http-thread-pool" />
                    <network-listener port="${ASADMIN_LISTENER_PORT}" protocol="pu-protocol" transport="tcp" name="admin-listener" thread-pool="http-thread-pool" />
                </network-listeners>
                <transports>
                    <transport name="tcp" />
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="http-thread-pool" />
                <thread-pool max-thread-pool-size="200" idle-thread-timeout-in-seconds="120" name="thread-pool-1" />
            </thread-pools>
            <group-management-service/>
            <management-rules />
         <system-property name="ASADMIN_LISTENER_PORT" value="54848"/>
         <system-property name="HTTP_LISTENER_PORT" value="58080"/>
         <system-property name="HTTP_SSL_LISTENER_PORT" value="58181"/>
         <system-property name="JMS_PROVIDER_PORT" value="57676"/>
         <system-property name="IIOP_LISTENER_PORT" value="53700"/>
         <system-property name="IIOP_SSL_LISTENER_PORT" value="53820"/>
         <system-property name="IIOP_SSL_MUTUALAUTH_PORT" value="53920"/>
         <system-property name="JMX_SYSTEM_CONNECTOR_PORT" value="58686"/>
         <system-property name="OSGI_SHELL_TELNET_PORT" value="56666"/>
         <system-property name="JAVA_DEBUGGER_PORT" value="59009"/>
          </config>
    </configs>
    <property name="administrative.domain.name" value="domain1"/>
</domain>