#  This file is part of the ETECTURE Open Source Community Projects.
# 
#  Copyright (c) 2013 by:
# 
#  ETECTURE GmbH
#  Darmst\u00e4dter Landstra\u00dfe 112
#  60598 Frankfurt
#  Germany
# 
#  All rights reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
# 
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
# 
#  3. Neither the name of the author nor the names of its contributors may be
#     used to endorse or promote products derived from this software without
#     specific prior written permission.
# 
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 

prepare_testGetTestResource = \
MERGE \
  (t:Test {\
    id: {id},\
    firstName: {firstName},\
    lastName: {lastName}\
  }) \
WITH \
  count(*) as x \
RETURN \
  x > 0 as result

cleanup_testGetTestResource = \
MATCH \
  (t:Test {\
    id: {id}\
  }) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

cleanup_testQueryTestResources = \
MATCH \
  (t:Test) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

prepare_testPutTestResource_testResourceDoesNotExists = \
MATCH \
  (t:Test {\
    id: {id}\
  }) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

cleanup_testPutTestResource_testResourceDoesNotExists = \
MATCH \
  (t:Test {\
    id: {id}\
  }) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

prepare_testPutTestResource_testResourceAlreadyExists = \
MERGE \
  (t:Test {\
    id: {id},\
    firstName: {request}.firstName,\
    lastName: {request}.lastName\
  }) \
WITH \
  count(*) as x \
RETURN \
  x > 0 as result

cleanup_testPutTestResource_testResourceAlreadyExists = \
MATCH \
  (t:Test {\
    id: {id}\
  }) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

prepare_testDeleteTestResource_testResourceDoesExists = \
MERGE \
  (t:Test {\
    id: {id},\
    firstName: {firstName},\
    lastName: {lastName}\
  }) \
WITH \
  count(*) as x \
RETURN \
  x > 0 as result

cleanup_testDeleteTestResource_testResourceDoesExists = \
MATCH \
  (t:Test {\
    id: {id}\
  }) \
DELETE \
  t \
WITH \
  count(*) as x \
RETURN \
  x >= 0 as result

